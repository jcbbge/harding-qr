.displayGrid {
    display: grid;
}

.displayContent {
    grid-column: 1 / -1;
    font-size: 44px;
}

.displayRow {
    display: grid;
    grid-template-columns: repeat(var(--name-length), 1fr);
    gap: 2px;
    background-color: var(--text-primary);
    padding: 2px;
    --cell-width: calc((100% - (var(--name-length) - 1) * 3px) / var(--name-length));
}

.dgHeader, .questionSection {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  color: var(--text-primary);
  font-size: 2rem;
  margin: 2.21rem 0;
}

.dgHeaderLeft {
  text-align: left;
}

.dgHeaderRight {
  text-align: right;
}

.displayLetter {
    width: 100%;
    aspect-ratio: 1 / 1;

    /* 2px */
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: clamp(2.5rem, 6vw, 4rem);
    /* 11px to 16px */
    transition: all 0.3s ease;
    font-family: var(--font-family);
    position: relative;
    /* Add this if not already present */
    z-index: 1;
    /* Ensure letterBox is above the expanded container */
    box-sizing: border-box;
    /* Include padding and border in the element's total width and height */
    min-width: 1.5em;
    /* Set a minimum width based on the font size */
    overflow: hidden;
    /* Hide overflow content */
}

.displayLetter:last-child {
    margin-right: 0;
}
.displayLetter.vowel {
    background-color: var(--accent-opposite);
    color: var(--text-secondary);
}

.displayLetter.matched.vowel {
    background-color: var(--accent);
}

.displayLetter.matched {
    /* 2px */
    background-color: var(--accent-unexpected);
    color: var(--text-secondary);
}

.displayLetter.emptyBox {
    background-color: var(--accent-fun);
}

.displayLetter:focus,
.displayLetter.focused {
    outline: 2px solid var(--accent-opposite) !important;
    box-shadow: 0 0 0 4px var(--accent-opposite) !important;
    z-index: 12 !important;
    background-color: var(--accent) !important;
    color: var(--text-secondary) !important;
    position: relative;
    /* Ensure the z-index works */
}

/* Add a specific rule for focus-visible */
.displayLetter:focus-visible {
    outline: 2px solid var(--accent-opposite) !important;
    box-shadow: 0 0 0 4px var(--accent-opposite) !important;
}

/* Add a new rule to ensure focus is visible even when using mouse */
.displayLetter:focus:not(:focus-visible) {
    outline: 2px solid var(--accent) !important;
    box-shadow: 0 0 0 4px var(--accent) !important;
}

/* Add this at the end of the file */
@media (max-width: 767px) {

    .displayRow {
        gap: 1px;
        padding: 1px;
    }

    .displayContent {
        gap: 11px;
        padding: 0;
    }

    .dgHeader {
        font-size: 1.5rem;
    }

    .displayLetter {
        user-select: none;
        -webkit-tap-highlight-color: transparent;
        touch-action: none;
    }

    .icon {
        width: 16px;
        height: 16px;
    }
}

/* First down arrow points to first empty box */
.gridArrow[data-grid-position="0"] {
  margin-left: 22px;
}

/* Second down arrow points to third empty box */
.gridArrow[data-grid-position="2"] {
  margin-left: 114px;
}

/* Up arrow points to second empty box */
.gridArrow[data-grid-position="1"] {
  margin-left: 96px;
}

/* Add responsive adjustments if needed */
@media (max-width: 767px) {
  .gridArrow[data-grid-position="0"] {
    margin-left: 15px;
  }
  
  .gridArrow[data-grid-position="2"] {
    margin-left: 80px;
  }
  
  .gridArrow[data-grid-position="1"] {
    margin-left: 60px;
  }
}

.icon {
  width: 33px;
  height: 33px;
  opacity: 0.8;
}

.iconInverted {
  filter: invert(1);
}

@media (max-width: 767px) {
  .icon {
    width: 16px;
    height: 16px;
  }
}

.iconLink {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  border: none;
  background: none;
  cursor: pointer;
  padding: 0;
  transition: opacity 0.2s ease;
}

.iconLink:hover {
  opacity: 0.7;
}

.iconLink:focus {
  outline: none;
}

.iconLink:focus-visible {
  outline: 2px solid var(--accent-opposite);
  outline-offset: 2px;
}

